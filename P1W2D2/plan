1. Ранее в сериале:
- контекст
    1) проверить, вызвано ли через new
    2)наличие call, bind, apply
    3) проверить, что вызвано на объекте
- что такое функция-конструктор
- почему методы надо записывать в прототип

Тест прототипы (опционально)

2. Стрелочные функции
    - нет this
    - нет prototype
    - не могут быть вызваны через new

3. Классы: синтаксис
    - создаем конструктор (внутри конструктора через this, вне можно без)
    - если передаваемых аргументов нет - можно без конструктора
    - методы создаются внутри класса
    - нет запятых (это не объект)
    - вызывается тоже через new

4. Статические методы
    - задаются через ключевое слово static
    - лежат на одном уровне с prototype
    - не передаются экземплярам класса
    - доступны как свойство самого класса (Array.isArray(), object.create())
    - внутри них нельзя обращаться к свойствам через this (в момент их вызова this теряется)

5. Инкапсуляция:

    1)Приватные методы и свойства (Инкапсуляция)
        - задаются через #
        - доступны только внутри класса (нельзя получить, обращаясь к экземпляру)

        Приватные поля тоже могут быть статическими

    2)Защищенные методы и свойства 
        - задаются через _название
        - это не конструкция языка, а соглашение
        - должны быть доступны только внутри класса

7. Геттеры и сеттеры (свойства-аксессоры)
    - получаем и устанавливаем значение полей

8. Наследование
    - наследование прототипа - extends
    - наследование конструктора - super

9. Полиморфизм
    - можно у родительских классов создать методы с таким же названием, как и у родительских,
    но с другой реализацией